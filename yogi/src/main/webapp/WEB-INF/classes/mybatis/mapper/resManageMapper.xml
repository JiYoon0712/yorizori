<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="resManage">
    <!-- 업체 리스트 -->
	<sql id="where-list">
		<choose>
			<when test="condition=='restaurantName'">
				INSTR(i.restaurantName, #{keyword}) &gt;= 1
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt;= 1
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM restaurantID i
		JOIN restaurant r ON i.restaurantNum = r.restaurantNum
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="enabled!=''">
				AND enabled = #{enabled}
			</if>
		</where> 
    </select>
    
	<select id="listOwner" parameterType="map" resultType="com.sp.yogi.owner.Owner">
		SELECT r.restaurantNum, r.restaurantName, i.userName,
			r.restaurantTel, r.reg_date, i.enabled
		FROM restaurantID i
		JOIN restaurant r ON i.restaurantNum = r.restaurantNum
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="enabled!=''">
				AND enabled = #{enabled}
			</if>
		</where> 
		ORDER BY restaurantNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="readRestaurantId" parameterType="long" resultType="com.sp.yogi.owner.order.Order">
		SELECT o.orderNum, m.userId, m.userName, o.tel, CONCAT(o.addr1, ' ', o.addr2) AS addr, 
			o.memo, o.order_date, o.total_price
		FROM order_bundle o
		JOIN member1 m ON o.userId = m.userId
		WHERE o.orderNum = #{orderNum}
	</select>


    <update id="updateOwnerEnabled" parameterType="map">
		UPDATE restaurantID SET enabled=#{enabled} WHERE restaurantNum=#{restaurantNum}
    </update>
    
	<insert id="insertOwnerState" parameterType="com.sp.yogi.owner.Owner">
		INSERT INTO restaurantState(reportNum, restaurantNum, stateCode, memo, registerId, reg_date)
		VALUES (restaurantState_seq.NEXTVAL, #{restaurantNum}, #{stateCode}, #{memo}, #{registerId}, SYSDATE)
	</insert>
	
	<select id="listOwnerState" parameterType="String" resultType="com.sp.yogi.owner.Owner">
		SELECT reportNum, restaurantNum, stateCode, memo, registerId, reg_date
		FROM restaurantState
		WHERE restaurantNum = #{restaurantNum}
		ORDER BY reportNum DESC
	</select>

	<select id="readOwnerState" parameterType="String" resultType="com.sp.yogi.owner.Owner">
		SELECT reportNum, restaurantNum, stateCode, memo, registerId, reg_date
		FROM restaurantState
		WHERE restaurantNum = #{restaurantNum}
		ORDER BY reportNum DESC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<update id="updateOwnerState" parameterType="map">
		UPDATE restaurantState
		SET stateCode = 0,
		    registerId = #{registerId},
		    memo = #{reason}
		WHERE restaurantNum = #{restaurantNum}
	</update>	

</mapper>
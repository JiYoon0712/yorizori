<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="restaurant">

	<!-- 키워드 -->
	<sql id="where-list">
		<if test="condition=='all' ">
			AND INSTR(restaurantName, #{keyword, jdbcType=VARCHAR}) &gt; 0
		</if>
		<if test="condition=='rank' ">
			AND INSTR(restaurantName, #{keyword, jdbcType=VARCHAR}) &gt; 0 
			ORDER BY rating ASC
		</if>
		<if test="condition=='review' ">
			AND INSTR(restaurantName, #{keyword, jdbcType=VARCHAR}) &gt; 0 
			ORDER BY reviewCount ASC
		</if>
		<if test="condition=='minPrice' ">
			AND INSTR(restaurantName, #{keyword, jdbcType=VARCHAR}) &gt; 0 
			ORDER BY basePrice DESC
		</if>
	</sql>
	
	<sql id="where-list2">
		<if test="condition=='all' ">
		</if>
		<if test="condition=='rank' ">
			ORDER BY rating ASC
		</if>
		<if test="condition=='review' ">
			ORDER BY reviewCount ASC
		</if>
		<if test="condition=='minPrice' ">
			ORDER BY basePrice DESC
		</if>
	</sql>	
	
	
	<select id="listRestaurant" parameterType="map" resultType="com.sp.yogi.restaurant.Restaurant">
		SELECT ri.restaurantNum, categoryNum ,restaurantName, basePrice, NVL(reviewCount,0) reviewCount, rating, addr addr1, imageFilename
		FROM restaurantId ri 
		JOIN restaurant r ON ri.restaurantNum = r.restaurantNum
		JOIN restaurantInfo info ON info.restaurantNum = ri.restaurantNum
		JOIN deliveryMap d ON d.restaurantNum = ri.restaurantNum
		JOIN restaurantImg img ON img.restaurantNum = ri.restaurantNum
		LEFT OUTER JOIN (
		    SELECT COUNT(*) reviewCount, AVG(rating) rating, restaurantNum FROM review GROUP BY restaurantNum
		) rv ON rv.restaurantNum = ri.restaurantNum 
		WHERE info.state = 1 AND ri.status = 3
			  AND INSTR(d.addr,  #{addr1}) &gt; 0
			  AND categoryNum = #{categoryNum}
		<if test="keyword!=null and keyword != '' ">
			<include refid="where-list"/>
		</if>
		<if test="keyword==null">
			<include refid="where-list2"/>
		</if>
	</select>
	
	

</mapper>